#!/bin/bash
# üîí V√âRIFICATION FINALE S√âCURIT√â
# Double-check aucun credential stock√© nulle part

echo "üîí V√âRIFICATION FINALE S√âCURIT√â"
echo "==============================="

# Fonction pour masquer les mots de passe dans la sortie
mask_password() {
    sed 's/vac[*^A-Za-z0-9]*[*u]/***PASSWORD_MASKED***/g'
}

echo "üîç V√©rification compl√®te repositories Git..."

# V√©rifier tous les repos dans GitHub folder
for repo in /home/stephane/GitHub/*/; do
    if [ -d "$repo/.git" ]; then
        echo "üìÅ Repo: $(basename "$repo")"
        cd "$repo"
        
        # V√©rifier remote URLs
        git remote -v 2>/dev/null | mask_password | head -2
        
        # V√©rifier config local
        SUSPECT_URL=$(git config --local --list 2>/dev/null | grep -E "url.*vac" | mask_password)
        if [ ! -z "$SUSPECT_URL" ]; then
            echo "   ‚ö†Ô∏è URL suspecte trouv√©e: $SUSPECT_URL"
        fi
    fi
done

echo ""
echo "üîç V√©rification fichiers syst√®me..."

# V√©rifier tous les fichiers de config Git
for config_file in ~/.gitconfig ~/.git-credentials ~/.netrc; do
    if [ -f "$config_file" ]; then
        echo "üìÑ $config_file:"
        SUSPECT_LINE=$(grep -E "vac|%2A|%5E" "$config_file" 2>/dev/null | mask_password)
        if [ ! -z "$SUSPECT_LINE" ]; then
            echo "   ‚ö†Ô∏è Ligne suspecte: $SUSPECT_LINE"
        else
            echo "   ‚úÖ Propre"
        fi
    else
        echo "üìÑ $config_file: ‚úÖ N'existe pas (bon)"
    fi
done

echo ""
echo "üîç V√©rification processus en cours..."

# V√©rifier si des processus Git utilisent des URLs avec credentials
SUSPECT_PROCESS=$(ps aux | grep -E "git.*vac" | grep -v grep | mask_password)
if [ ! -z "$SUSPECT_PROCESS" ]; then
    echo "‚ö†Ô∏è Processus suspect: $SUSPECT_PROCESS"
else
    echo "‚úÖ Aucun processus Git suspect"
fi

echo ""
echo "üîç V√©rification derni√®re commande..."

# V√©rifier si la derni√®re tentative de push a laiss√© des traces
LAST_PUSH_ERROR=$(git log --oneline -1 2>/dev/null)
echo "üìù Dernier commit: $LAST_PUSH_ERROR"

# Test final avec push dry-run
cd /home/stephane/GitHub/PaniniFS-1
echo ""
echo "üß™ Test push dry-run (simulation)..."
git push --dry-run origin master 2>&1 | mask_password | head -3

echo ""
echo "‚úÖ V√âRIFICATION TERMIN√âE"
echo "========================"
echo "Si aucune ligne '‚ö†Ô∏è' ci-dessus, le syst√®me est s√©curis√©."
echo "Sinon, indiquer les lignes suspectes pour nettoyage cibl√©."
