name: ðŸ”„ Collecteurs Multi-Sources OptimisÃ©s

on:
  schedule:
    # Lundi, Mercredi, Vendredi Ã  02:00 UTC (optimisation coÃ»t)
    - cron: '0 2 * * 1,3,5'
  workflow_dispatch: # Manual trigger

env:
  PYTHON_VERSION: '3.11'

jobs:
  wikipedia-collector:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        cd Copilotage/scripts
        pip install -r requirements.txt
    
    - name: Run Wikipedia Collector
      run: |
        cd Copilotage/scripts
        python3 collect_with_attribution.py --source wikipedia --max-articles 100 --timeout 40
    
    - name: Upload Wikipedia Data
      uses: actions/upload-artifact@v4
      with:
        name: wikipedia-data-${{ github.run_number }}
        path: Copilotage/scripts/*wikipedia*.json
        retention-days: 30

  arxiv-collector:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        cd Copilotage/scripts
        pip install -r requirements.txt
    
    - name: Run ArXiv Collector
      run: |
        cd Copilotage/scripts
        python3 arxiv_collector.py --max-papers 50 --timeout 40
    
    - name: Upload ArXiv Data
      uses: actions/upload-artifact@v4
      with:
        name: arxiv-data-${{ github.run_number }}
        path: Copilotage/scripts/*arxiv*.json
        retention-days: 30

  consensus-analysis:
    needs: [wikipedia-collector, arxiv-collector]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: '*-data-*'
        path: Copilotage/scripts/
        merge-multiple: true
    
    - name: Install dependencies
      run: |
        cd Copilotage/scripts
        pip install -r requirements.txt
    
    - name: Run Consensus Analysis
      run: |
        cd Copilotage/scripts
        python3 consensus_analyzer.py --incremental --timeout 25
    
    - name: Upload Analysis Results
      uses: actions/upload-artifact@v4
      with:
        name: consensus-analysis-${{ github.run_number }}
        path: Copilotage/scripts/*consensus*.json
        retention-days: 90
    
    - name: Update GitHub Pages Data
      run: |
        # Copier rÃ©sultats vers docs pour GitHub Pages
        mkdir -p docs/data
        cp Copilotage/scripts/*consensus*.json docs/data/latest_consensus.json
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/data/
        git commit -m "ðŸ¤– Auto-update consensus data" || exit 0
        git push
