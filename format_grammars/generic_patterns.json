{
  "version": "1.0.0",
  "description": "Universal patterns for binary format decomposition (PaniniFS)",
  "patterns": {
    "MAGIC_NUMBER": {
      "name": "MAGIC_NUMBER",
      "category": "structural",
      "description": "Signature fixe identifiant le format de fichier",
      "parameters": {
        "size": "variable",
        "position": "file_start",
        "encoding": "bytes"
      },
      "applicable_to": [
        "PNG",
        "JPEG",
        "GIF",
        "PDF",
        "ELF",
        "ZIP",
        "GZIP"
      ]
    },
    "LENGTH_PREFIXED_DATA": {
      "name": "LENGTH_PREFIXED_DATA",
      "category": "structural",
      "description": "Bloc de donn\u00e9es pr\u00e9c\u00e9d\u00e9 de sa taille",
      "parameters": {
        "length_size": "1-8 bytes",
        "endianness": "big|little",
        "length_includes_self": "boolean"
      },
      "applicable_to": [
        "PNG",
        "IFF",
        "RIFF",
        "EBML",
        "Matroska",
        "TLV"
      ]
    },
    "TYPED_CHUNK": {
      "name": "TYPED_CHUNK",
      "category": "composition",
      "description": "Bloc avec type + taille + donn\u00e9es + validation",
      "parameters": {
        "type_size": "usually 4 bytes",
        "type_encoding": "ASCII|binary",
        "has_checksum": "boolean"
      },
      "applicable_to": [
        "PNG",
        "IFF",
        "RIFF",
        "WAV",
        "AVI"
      ]
    },
    "CRC_CHECKSUM": {
      "name": "CRC_CHECKSUM",
      "category": "validation",
      "description": "Somme de contr\u00f4le CRC pour validation d'int\u00e9grit\u00e9",
      "parameters": {
        "algorithm": "CRC-32|CRC-16|etc",
        "polynomial": "varies",
        "covers": "specified data range"
      },
      "applicable_to": [
        "PNG",
        "ZIP",
        "GZIP",
        "Ethernet",
        "USB"
      ]
    },
    "SEQUENTIAL_STRUCTURE": {
      "name": "SEQUENTIAL_STRUCTURE",
      "category": "composition",
      "description": "Suite de blocs jusqu'\u00e0 un terminateur sp\u00e9cifique",
      "parameters": {
        "block_pattern": "reference to pattern",
        "terminator": "specific value",
        "min_blocks": "integer",
        "max_blocks": "integer|unlimited"
      },
      "applicable_to": [
        "PNG",
        "IFF",
        "TIFF",
        "Matroska"
      ]
    },
    "PALETTE_DATA": {
      "category": "data",
      "description": "Indexed color palette (RGB table)",
      "structure": "Array of RGB triplets (R, G, B bytes)",
      "usage": "Color lookup table for indexed images",
      "applicable_formats": [
        "GIF",
        "PNG (plte)",
        "BMP",
        "PCX"
      ],
      "universality": 4
    },
    "LOGICAL_SCREEN_DESCRIPTOR": {
      "category": "structural",
      "description": "Canvas/screen metadata",
      "structure": "Width, Height, Flags, Background, AspectRatio",
      "usage": "Defines logical screen dimensions and properties",
      "applicable_formats": [
        "GIF"
      ],
      "universality": 2
    },
    "IMAGE_DESCRIPTOR": {
      "category": "structural",
      "description": "Image position and size metadata",
      "structure": "Left, Top, Width, Height, Flags",
      "usage": "Defines image placement within logical screen",
      "applicable_formats": [
        "GIF",
        "multi-image formats"
      ],
      "universality": 3
    },
    "GRAPHIC_CONTROL_EXTENSION": {
      "category": "metadata",
      "description": "Animation control (delay, transparency)",
      "structure": "Disposal, UserInput, Transparent, Delay, TransparentIndex",
      "usage": "Controls animation timing and transparency",
      "applicable_formats": [
        "GIF89a",
        "APNG"
      ],
      "universality": 2
    },
    "LZW_COMPRESSED_DATA": {
      "category": "data",
      "description": "LZW-compressed image data",
      "structure": "MinCodeSize + Sub-blocks (size + data) terminated by 0x00",
      "usage": "Compressed raster data",
      "applicable_formats": [
        "GIF",
        "TIFF (LZW)",
        "PDF (LZW)"
      ],
      "universality": 3
    },
    "RIFF_HEADER": {
      "name": "RIFF_HEADER",
      "description": "RIFF file header (signature + size + form type)",
      "structure": [
        "MAGIC_NUMBER",
        "LENGTH_PREFIXED_DATA",
        "RIFF_FORM_TYPE"
      ],
      "reusable": true,
      "formats": [
        "WebP",
        "WAV",
        "AVI",
        "MIDI"
      ],
      "size": "fixed_12_bytes"
    },
    "RIFF_FORM_TYPE": {
      "name": "RIFF_FORM_TYPE",
      "description": "RIFF form type identifier (FOURCC)",
      "example": "WEBP, WAVE, AVI, RMID",
      "reusable": true,
      "formats": [
        "WebP",
        "WAV",
        "AVI",
        "MIDI"
      ],
      "size": "fixed_4_bytes"
    },
    "RIFF_CHUNK": {
      "name": "RIFF_CHUNK",
      "description": "RIFF chunk (FourCC + size + data + optional padding)",
      "structure": [
        "FOURCC",
        "LENGTH_PREFIXED_DATA",
        "OPTIONAL_PADDING"
      ],
      "reusable": true,
      "formats": [
        "WebP",
        "WAV",
        "AVI",
        "MIDI"
      ],
      "alignment": "word_aligned"
    },
    "VP8_BITSTREAM": {
      "name": "VP8_BITSTREAM",
      "description": "VP8 lossy video bitstream",
      "structure": [
        "FRAME_TAG",
        "START_CODE",
        "WIDTH_HEIGHT",
        "COMPRESSED_DATA"
      ],
      "reusable": false,
      "formats": [
        "WebP",
        "WebM",
        "MP4"
      ],
      "compression": "VP8"
    },
    "VP8L_BITSTREAM": {
      "name": "VP8L_BITSTREAM",
      "description": "VP8L lossless image bitstream",
      "structure": [
        "SIGNATURE",
        "WIDTH_HEIGHT_ALPHA",
        "COMPRESSED_DATA"
      ],
      "reusable": false,
      "formats": [
        "WebP"
      ],
      "compression": "VP8L"
    },
    "VP8X_HEADER": {
      "name": "VP8X_HEADER",
      "description": "VP8X extended features header",
      "structure": [
        "FLAGS",
        "CANVAS_SIZE"
      ],
      "reusable": false,
      "formats": [
        "WebP"
      ],
      "features": [
        "ICC",
        "ALPHA",
        "EXIF",
        "XMP",
        "ANIMATION"
      ]
    },
    "PADDING_ALIGNMENT": {
      "name": "PADDING_ALIGNMENT",
      "description": "Padding byte for word alignment",
      "reusable": true,
      "formats": [
        "WebP",
        "WAV",
        "AVI",
        "MIDI",
        "IFF"
      ],
      "size": "1_byte_if_odd"
    },
    "TIFF_HEADER": {
      "name": "TIFF_HEADER",
      "description": "TIFF file header (byte order + magic + IFD offset)",
      "structure": [
        "BYTE_ORDER_MARKER",
        "MAGIC_NUMBER",
        "OFFSET_POINTER"
      ],
      "reusable": false,
      "formats": [
        "TIFF"
      ],
      "size": "fixed_8_bytes"
    },
    "BYTE_ORDER_MARKER": {
      "name": "BYTE_ORDER_MARKER",
      "description": "Byte order marker (II=little, MM=big endian)",
      "example": "II (Intel), MM (Motorola)",
      "reusable": true,
      "formats": [
        "TIFF",
        "EXIF",
        "DNG"
      ],
      "size": "fixed_2_bytes"
    },
    "OFFSET_POINTER": {
      "name": "OFFSET_POINTER",
      "description": "Pointer to data location elsewhere in file",
      "reusable": true,
      "formats": [
        "TIFF",
        "PDF",
        "ZIP",
        "ELF"
      ],
      "size": "variable_2_4_8_bytes"
    },
    "IFD_STRUCTURE": {
      "name": "IFD_STRUCTURE",
      "description": "Image File Directory (count + entries + next pointer)",
      "structure": [
        "COUNT",
        "TAG_VALUE_PAIR_ARRAY",
        "OFFSET_POINTER"
      ],
      "reusable": false,
      "formats": [
        "TIFF",
        "EXIF",
        "DNG"
      ],
      "size": "variable"
    },
    "TAG_VALUE_PAIR": {
      "name": "TAG_VALUE_PAIR",
      "description": "Tagged field (tag + type + count + value/offset)",
      "structure": [
        "TAG_ID",
        "TYPE_CODE",
        "COUNT",
        "VALUE_OR_OFFSET"
      ],
      "reusable": true,
      "formats": [
        "TIFF",
        "EXIF",
        "ID3v2",
        "PNG_tEXt"
      ],
      "size": "fixed_12_bytes"
    },
    "STRIP_DATA": {
      "name": "STRIP_DATA",
      "description": "Image data organized in strips or tiles",
      "reusable": false,
      "formats": [
        "TIFF"
      ],
      "size": "variable"
    },
    "IFD_CHAIN": {
      "name": "IFD_CHAIN",
      "description": "Linked list of IFDs via offset pointers",
      "structure": [
        "IFD_STRUCTURE",
        "OFFSET_POINTER to next"
      ],
      "reusable": true,
      "formats": [
        "TIFF",
        "EXIF",
        "DNG"
      ],
      "size": "variable"
    },
    "FMT_CHUNK": {
      "name": "FMT_CHUNK",
      "description": "WAV format chunk (audio parameters)",
      "reusable": false,
      "formats": [
        "WAV"
      ],
      "size": "16_or_18_bytes"
    },
    "DATA_CHUNK": {
      "name": "DATA_CHUNK",
      "description": "WAV data chunk (raw PCM audio samples)",
      "reusable": false,
      "formats": [
        "WAV"
      ],
      "size": "variable"
    },
    "LOCAL_FILE_HEADER": {
      "name": "LOCAL_FILE_HEADER",
      "description": "ZIP local file header (PK\\x03\\x04 + metadata + compressed data)",
      "reusable": false,
      "formats": [
        "ZIP",
        "JAR",
        "APK"
      ],
      "size": "variable"
    },
    "CENTRAL_DIRECTORY_HEADER": {
      "name": "CENTRAL_DIRECTORY_HEADER",
      "description": "ZIP central directory entry (PK\\x01\\x02 + file metadata)",
      "reusable": false,
      "formats": [
        "ZIP",
        "JAR",
        "APK"
      ],
      "size": "variable"
    },
    "END_OF_CENTRAL_DIR": {
      "name": "END_OF_CENTRAL_DIR",
      "description": "ZIP end of central directory (PK\\x05\\x06 + global metadata)",
      "reusable": false,
      "formats": [
        "ZIP",
        "JAR",
        "APK"
      ],
      "size": "minimum_22_bytes"
    },
    "ID3_TAG": {
      "name": "ID3_TAG",
      "description": "ID3 metadata tag (v1 or v2)",
      "reusable": false,
      "formats": [
        "MP3"
      ],
      "size": "variable"
    },
    "MPEG_FRAME": {
      "name": "MPEG_FRAME",
      "description": "MPEG audio frame (sync + header + data)",
      "reusable": true,
      "formats": [
        "MP3",
        "MP4",
        "MPEG"
      ],
      "size": "variable"
    },
    "FRAME_HEADER": {
      "name": "FRAME_HEADER",
      "description": "Frame header with sync word (0xFFF)",
      "reusable": true,
      "formats": [
        "MP3",
        "MP4",
        "AAC"
      ],
      "size": "fixed_4_bytes"
    },
    "BOX_STRUCTURE": {
      "name": "BOX_STRUCTURE",
      "description": "ISO BMFF box (size + type + data)",
      "structure": [
        "LENGTH_PREFIXED_DATA",
        "FOURCC",
        "DATA"
      ],
      "reusable": true,
      "formats": [
        "MP4",
        "MOV",
        "3GP",
        "M4A"
      ],
      "size": "variable"
    },
    "NESTED_BOX": {
      "name": "NESTED_BOX",
      "description": "Box containing child boxes (recursive)",
      "reusable": true,
      "formats": [
        "MP4",
        "MOV"
      ],
      "size": "variable"
    },
    "FTYP_BOX": {
      "name": "FTYP_BOX",
      "description": "File type box (brand + compatibility)",
      "reusable": false,
      "formats": [
        "MP4",
        "MOV"
      ],
      "size": "variable"
    },
    "MOOV_BOX": {
      "name": "MOOV_BOX",
      "description": "Movie metadata box (nested structure)",
      "reusable": false,
      "formats": [
        "MP4",
        "MOV"
      ],
      "size": "variable"
    },
    "MDAT_BOX": {
      "name": "MDAT_BOX",
      "description": "Media data box (audio/video samples)",
      "reusable": false,
      "formats": [
        "MP4",
        "MOV"
      ],
      "size": "variable"
    },
    "PDF_HEADER": {
      "name": "PDF_HEADER",
      "description": "PDF header (%PDF-version)",
      "reusable": false,
      "formats": [
        "PDF"
      ],
      "size": "variable"
    },
    "PDF_OBJECT": {
      "name": "PDF_OBJECT",
      "description": "PDF indirect object (n m obj ... endobj)",
      "reusable": false,
      "formats": [
        "PDF"
      ],
      "size": "variable"
    },
    "CONTENT_STREAM": {
      "name": "CONTENT_STREAM",
      "description": "PDF content stream (stream ... endstream)",
      "reusable": false,
      "formats": [
        "PDF"
      ],
      "size": "variable"
    },
    "XREF_TABLE": {
      "name": "XREF_TABLE",
      "description": "PDF cross-reference table (object offsets)",
      "reusable": false,
      "formats": [
        "PDF"
      ],
      "size": "variable"
    },
    "PDF_TRAILER": {
      "name": "PDF_TRAILER",
      "description": "PDF trailer dictionary",
      "reusable": false,
      "formats": [
        "PDF"
      ],
      "size": "variable"
    },
    "EOF_MARKER": {
      "name": "EOF_MARKER",
      "description": "End-of-file marker (%%EOF)",
      "reusable": true,
      "formats": [
        "PDF",
        "PostScript"
      ],
      "size": "fixed_5_bytes"
    }
  },
  "MAGIC_NUMBER": {
    "category": "structural",
    "description": "File signature marker (SOI)",
    "jpeg_usage": "FF D8 marker at file start",
    "validation": "Always FF D8",
    "applicable_to": [
      "JPEG",
      "JFIF",
      "EXIF",
      "Motion JPEG"
    ]
  },
  "SEGMENT_STRUCTURE": {
    "category": "composition",
    "description": "Marker + Length + Data pattern",
    "jpeg_usage": "Most JPEG segments follow this structure",
    "components": {
      "marker": "2 bytes (FF XX)",
      "length": "2 bytes big-endian (includes length field)",
      "data": "Variable length payload"
    },
    "exceptions": "SOI/EOI have no length/data",
    "applicable_to": [
      "JPEG",
      "TIFF",
      "RIFF chunks"
    ]
  },
  "SEQUENTIAL_SEGMENTS": {
    "category": "composition",
    "description": "Sequential chain of segments",
    "jpeg_usage": "File is sequence of segments from SOI to EOI",
    "terminator": "EOI marker (FF D9)",
    "applicable_to": [
      "JPEG",
      "PNG chunks",
      "IFF chunks"
    ]
  },
  "TERMINATOR": {
    "category": "structural",
    "description": "End-of-file marker",
    "jpeg_usage": "EOI (FF D9) marks end of image",
    "validation": "Must be last bytes",
    "applicable_to": [
      "JPEG",
      "Some RIFF variants"
    ]
  },
  "BIG_ENDIAN_LENGTH": {
    "category": "structural",
    "description": "Length encoded as big-endian 16-bit integer",
    "jpeg_usage": "All segment lengths in JPEG",
    "note": "Includes the 2 bytes of length field itself",
    "applicable_to": [
      "JPEG",
      "Some network protocols",
      "Some binary formats"
    ]
  }
}