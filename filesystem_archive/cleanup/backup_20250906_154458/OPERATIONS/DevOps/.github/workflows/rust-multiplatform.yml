name: ðŸ¦€ Rust Multi-Platform Build

on:
  push:
    paths:
      - 'PaniniFS-2/**'
      - '.github/workflows/rust-multiplatform.yml'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: panini-fs
            asset_name: panini-fs-linux-amd64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: panini-fs.exe
            asset_name: panini-fs-windows-amd64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: panini-fs
            asset_name: panini-fs-macos-amd64
    
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    
    - name: Cache Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          PaniniFS-2/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build Release
      run: |
        cd PaniniFS-2
        cargo build --release --target ${{ matrix.target }}
    
    - name: Upload Binary
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: PaniniFS-2/target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        retention-days: 90
