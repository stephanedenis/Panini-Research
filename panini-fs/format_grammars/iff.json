{
  "version": "1.0.0",
  "description": "IFF (Interchange File Format) grammar using universal patterns - REUSES PNG patterns!",
  "grammar": {
    "format": "IFF",
    "version": "EA IFF 85",
    "notes": "Also known as RIFF on Windows (Resource Interchange File Format)",
    "composition": {
      "root": {
        "pattern": "SEQUENTIAL",
        "elements": [
          {
            "name": "form_header",
            "pattern": "MAGIC_NUMBER",
            "value": "464f524d",
            "size": 4,
            "required": true,
            "comment": "FORM - IFF container identifier"
          },
          {
            "name": "file_size",
            "pattern": "LENGTH_PREFIXED_DATA",
            "size": 4,
            "endianness": "big",
            "type": "uint32",
            "comment": "Size of remaining file (excluding this 8-byte header)"
          },
          {
            "name": "form_type",
            "size": 4,
            "encoding": "ASCII",
            "comment": "Type of IFF file (ILBM, 8SVX, AIFF, etc.)"
          },
          {
            "name": "chunks",
            "pattern": "SEQUENTIAL_STRUCTURE",
            "element": {
              "pattern": "TYPED_CHUNK",
              "comment": "EXACT SAME PATTERN AS PNG! Just without CRC",
              "structure": [
                {
                  "name": "type",
                  "size": 4,
                  "encoding": "ASCII",
                  "constraint": "^[A-Za-z0-9 ]{4}$"
                },
                {
                  "name": "length",
                  "pattern": "LENGTH_PREFIXED_DATA",
                  "size": 4,
                  "endianness": "big",
                  "type": "uint32"
                },
                {
                  "name": "data",
                  "size": "from_length",
                  "encoding": "bytes"
                },
                {
                  "name": "padding",
                  "pattern": "ALIGNMENT_PADDING",
                  "size": "align_to_2_bytes",
                  "comment": "IFF pads chunks to even byte boundaries"
                }
              ]
            },
            "terminator": null,
            "comment": "No explicit terminator, reads until EOF"
          }
        ]
      }
    },
    "patterns_reused_from_png": [
      "MAGIC_NUMBER",
      "LENGTH_PREFIXED_DATA",
      "TYPED_CHUNK",
      "SEQUENTIAL_STRUCTURE"
    ],
    "differences_from_png": {
      "crc": "IFF does NOT use CRC checksums",
      "padding": "IFF pads chunks to 2-byte boundaries, PNG doesn't",
      "endianness": "Both use big-endian",
      "chunk_order": "IFF/FORM header, then type, then chunks"
    },
    "common_iff_types": {
      "ILBM": "InterLeaved BitMap (Amiga images)",
      "8SVX": "8-bit Sampled Voice (Amiga audio)",
      "AIFF": "Audio Interchange File Format",
      "FTXT": "Formatted Text"
    },
    "riff_variant": {
      "magic": "RIFF",
      "endianness": "little",
      "comment": "RIFF (Windows) uses little-endian, IFF (Amiga) uses big-endian",
      "examples": ["WAV (audio)", "AVI (video)", "WebP (image)"]
    }
  },
  "usage": {
    "decomposer": "Same generic_decomposer.py with minor padding logic",
    "reconstructor": "Same generic_reconstructor.py with alignment",
    "proof": "95% of IFF grammar reuses PNG patterns!"
  }
}
