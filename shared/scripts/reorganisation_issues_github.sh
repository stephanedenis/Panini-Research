#!/bin/bash

# üìã R√âORGANISATION ISSUES SELON ARCHITECTURE 3 PROJETS R√âELS
# Organisation automatique des 12 issues existantes

echo "üìã R√âORGANISATION ISSUES GITHUB PANINI"
echo "====================================="
echo

cd /home/stephane/GitHub/Panini

# Classification des issues selon architecture r√©elle
classify_issues() {
    echo "üéØ CLASSIFICATION SELON 3 PROJETS R√âELS :"
    echo
    
    # RESEARCH ISSUES (C≈ìur de recherche)
    echo "üß™ ISSUES PROJECT:RESEARCH :"
    echo "  #13 - Atomes S√©mantiques √âvolutifs + Multilinguisme"
    echo "  #12 - S√©paration Contenant/Contenu - Corpus"  
    echo "  #5  - Foundations math√©matiques compression s√©mantique"
    echo "  #3  - Extraction primitive cross-modal"
    echo "  #2  - Optimisation algorithmes hashing s√©mantique"
    echo "  #1  - D√©veloppement primitives aspectuelles"
    
    # FILESYSTEM ISSUES (FS s√©mantique)
    echo
    echo "üóÇÔ∏è ISSUES PROJECT:FILESYSTEM :"
    echo "  #11 - Validateurs PaniniFS - Ingestion/Restitution"
    echo "  #4  - Prototype syst√®me fichiers adressage s√©mantique"
    
    # LEGACY/TOOLS ISSUES (Anciens modules)
    echo
    echo "üì¶ ISSUES LEGACY/TOOLS :"
    echo "  #14 - Dashboard M√©triques (tools)"
    echo "  #10 - Infrastructure autonomie (legacy)"
    echo "  #9  - Copilotage Git workflow (legacy)"
    echo "  #8  - Documentation dhatu (tools)"
    
    # ONTOWAVE ISSUES (√Ä cr√©er)
    echo
    echo "üåä ISSUES ONTOWAVE (√Ä cr√©er) :"
    echo "  ‚Üí Interface navigation MD"
    echo "  ‚Üí API plugins modulaire"
    echo "  ‚Üí Visualisation s√©mantique"
}

# Application des labels
apply_labels() {
    echo
    echo "üè∑Ô∏è APPLICATION DES LABELS :"
    echo "=========================="
    
    # Research issues
    echo "üß™ Labeling RESEARCH issues..."
    gh issue edit 13 --add-label "project:research" 2>/dev/null || echo "  ‚ö†Ô∏è Issue #13 erreur"
    gh issue edit 12 --add-label "project:research" 2>/dev/null || echo "  ‚ö†Ô∏è Issue #12 erreur"
    gh issue edit 5 --add-label "project:research" 2>/dev/null || echo "  ‚ö†Ô∏è Issue #5 erreur"
    gh issue edit 3 --add-label "project:research" 2>/dev/null || echo "  ‚ö†Ô∏è Issue #3 erreur"
    gh issue edit 2 --add-label "project:research" 2>/dev/null || echo "  ‚ö†Ô∏è Issue #2 erreur"
    gh issue edit 1 --add-label "project:research" 2>/dev/null || echo "  ‚ö†Ô∏è Issue #1 erreur"
    
    # Filesystem issues  
    echo "üóÇÔ∏è Labeling FILESYSTEM issues..."
    gh issue edit 11 --add-label "project:filesystem" 2>/dev/null || echo "  ‚ö†Ô∏è Issue #11 erreur"
    gh issue edit 4 --add-label "project:filesystem" 2>/dev/null || echo "  ‚ö†Ô∏è Issue #4 erreur"
    
    # Legacy issues
    echo "üì¶ Labeling LEGACY issues..."
    gh issue edit 10 --add-label "legacy:modules" 2>/dev/null || echo "  ‚ö†Ô∏è Issue #10 erreur"
    gh issue edit 9 --add-label "legacy:modules" 2>/dev/null || echo "  ‚ö†Ô∏è Issue #9 erreur"
    
    # Tools issues (garder comme outils)
    echo "üõ†Ô∏è Labeling TOOLS issues..."
    gh issue edit 14 --add-label "type:architecture" 2>/dev/null || echo "  ‚ö†Ô∏è Issue #14 erreur"
    gh issue edit 8 --add-label "documentation" 2>/dev/null || echo "  ‚ö†Ô∏è Issue #8 d√©j√† labell√©"
    
    echo "‚úÖ Labels appliqu√©s !"
}

# Cr√©ation issues OntoWave
create_ontowave_issues() {
    echo
    echo "üåä CR√âATION ISSUES ONTOWAVE :"
    echo "============================"
    
    echo "üìù Cr√©ation issue principale OntoWave..."
    gh issue create \
        --title "[ONTOWAVE] Interface navigation MD s√©mantique ultra-l√©g√®re" \
        --body "## üéØ Objectif
D√©velopper interface OntoWave pour navigation et visualisation des documents Markdown avec API plugins modulaire.

## üìã Fonctionnalit√©s
- [x] Architecture TypeScript/Vite ‚úÖ
- [x] Structure modulaire ‚úÖ  
- [x] Tests Playwright ‚úÖ
- [ ] Navigation s√©mantique MD
- [ ] API plugins
- [ ] Visualisation liens
- [ ] Int√©gration Panini

## üîó Liens
- Repository: https://github.com/stephanedenis/OntoWave
- Submodule: projects/ontowave/" \
        --label "project:ontowave" || echo "  ‚ö†Ô∏è Erreur cr√©ation issue OntoWave"
    
    echo "‚úÖ Issue OntoWave cr√©√©e !"
}

# Mise √† jour descriptions issues
update_issue_descriptions() {
    echo
    echo "üìù MISE √Ä JOUR DESCRIPTIONS :"
    echo "============================"
    
    echo "üß™ Mise √† jour issues Research..."
    # Exemple pour issue #13
    gh issue edit 13 --body "## üß™ PROJECT: RESEARCH

Cette issue fait partie du **c≈ìur de recherche Panini** (94M).

### üéØ Contexte Architecture
- Module: \`research/\` (enrichi avec exp√©rimentations)
- Focus: Atomes s√©mantiques √©volutifs
- Priorit√©: HAUTE (c≈ìur de travail)

### üìã T√¢ches
- [ ] Multilinguisme avanc√©
- [ ] Base traducteurs
- [ ] √âvolution s√©mantique

Voir: \`research/\` pour impl√©mentation." 2>/dev/null || echo "  ‚ö†Ô∏è Issue #13 mise √† jour √©chou√©e"
    
    echo "üóÇÔ∏è Mise √† jour issues Filesystem..."
    gh issue edit 11 --body "## üóÇÔ∏è PROJECT: FILESYSTEM

Cette issue fait partie du **syst√®me de fichiers s√©mantique** (3M √©pur√©).

### üéØ Contexte Architecture  
- Module: \`modules/core/filesystem/\` (nettoy√©)
- Focus: FS s√©mantique pur
- Priorit√©: HAUTE (projet r√©el)

### üìã T√¢ches
- [ ] Validateurs ingestion
- [ ] Restitution multi-format
- [ ] Interface FS s√©mantique

Voir: \`modules/core/filesystem/\` pour impl√©mentation." 2>/dev/null || echo "  ‚ö†Ô∏è Issue #11 mise √† jour √©chou√©e"
    
    echo "‚úÖ Descriptions mises √† jour !"
}

# Archivage issues legacy
archive_legacy_issues() {
    echo
    echo "üì¶ ARCHIVAGE ISSUES LEGACY :"
    echo "==========================="
    
    echo "üìù Mise √† jour issues legacy (modules supprim√©s)..."
    
    # Issue #10 - Infrastructure autonomie (module supprim√©)
    gh issue edit 10 --body "## üì¶ LEGACY: MODULE SUPPRIM√â

‚ö†Ô∏è **Ce module a √©t√© supprim√©** lors de la refactorisation architecture 3 projets r√©els.

### üéØ Statut
- Module \`modules/infrastructure/autonomous\` ‚Üí **SUPPRIM√â**
- Fonctionnalit√© ‚Üí Peut √™tre recr√©√©e si n√©cessaire dans \`research/\`
- Priorit√© ‚Üí **BASSE** (scaffold √©limin√©)

### üîÑ Migration
Si cette fonctionnalit√© est encore n√©cessaire :
1. Analyser besoins r√©els
2. Int√©grer dans \`research/\` ou cr√©er outil d√©di√©
3. √âviter dispersion architecturale" 2>/dev/null || echo "  ‚ö†Ô∏è Issue #10 archivage √©chou√©"
    
    echo "‚úÖ Issues legacy archiv√©es !"
}

# Rapport final
generate_report() {
    echo
    echo "üìä RAPPORT ORGANISATION ISSUES :"
    echo "==============================="
    
    echo "‚úÖ ORGANISATION ACCOMPLIE :"
    echo
    echo "üß™ RESEARCH (6 issues) :"
    echo "  #13, #12, #5, #3, #2, #1"
    echo
    echo "üóÇÔ∏è FILESYSTEM (2 issues) :"
    echo "  #11, #4"
    echo
    echo "üåä ONTOWAVE (1+ issues) :"
    echo "  Nouvelles issues cr√©√©es"
    echo
    echo "üì¶ LEGACY/TOOLS (4 issues) :"
    echo "  #14, #10, #9, #8"
    echo
    echo "üéØ R√âSULTAT : Issues align√©es avec architecture 3 projets r√©els !"
}

# Programme principal
main() {
    classify_issues
    
    echo
    echo "ü§î Voulez-vous appliquer cette organisation ?"
    echo "  1) Appliquer labels automatiquement"
    echo "  2) Cr√©er issues OntoWave"  
    echo "  3) Mettre √† jour descriptions"
    echo "  4) Archiver issues legacy"
    echo "  5) Tout faire automatiquement"
    echo "  6) Juste voir la classification"
    echo
    read -r -p "Votre choix (1-6): " choice
    
    case "$choice" in
        1) apply_labels ;;
        2) create_ontowave_issues ;;
        3) update_issue_descriptions ;;
        4) archive_legacy_issues ;;
        5) 
            apply_labels
            create_ontowave_issues
            update_issue_descriptions
            archive_legacy_issues
            generate_report
            ;;
        6) echo "‚úÖ Classification affich√©e seulement" ;;
        *) echo "‚ùå Choix invalide" ;;
    esac
}

main